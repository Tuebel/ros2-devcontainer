# Use this, if you run a full Linux installation
version: "3.8"
services:
  ros2-devcontainer:
    build:
      # context: ..
      dockerfile: Dockerfile
    # Optional: Access external devices, e.g., USB cameras
    privileged: true
    volumes:
      - ..:/workspace:cached
      # GUI support
      - /tmp/.X11-unix:/tmp/.X11-unix
    network_mode: host
    # Avoid Qt glitches
    ipc: host
    environment:
      # Do not spam IRT network
      ROS_LOCALHOST_ONLY: 1
      # When using local network check if anyone else is spamming on this ID
      ROS_DOMAIN_ID: 42
      # GUI support
      DISPLAY: $DISPLAY
      WAYLAND_DISPLAY: WAYLAND_DISPLAY
      XDG_RUNTIME_DIR: XDG_RUNTIME_DIR
      PULSE_SERVER: PULSE_SERVER
      # Optional: Use NVIDIA GPU for rendering
      __NV_PRIME_RENDER_OFFLOAD: 1
      __GLX_VENDOR_LIBRARY_NAME: nvidia
    devices:
      # Accelerated 3D graphics
      - /dev/dri
    # Optional: Enable CUDA
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              # count: 1 # limit number of GPUs used by container
    # Required for ptrace-based debuggers like C++
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
      - seccomp:unconfined
    # Avoid shutting down after process ends
    command: sleep infinity
